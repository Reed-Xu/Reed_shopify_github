{{ 'component-image-with-text.css' | asset_url | stylesheet_tag }}

{%- style -%}
  .section-{{ section.id }}-padding {
    padding-top: {{ section.settings.padding_top | times: 0.75 | round: 0 }}px;
    padding-bottom: {{ section.settings.padding_bottom | times: 0.75 | round: 0 }}px;
  }

  @media screen and (min-width: 750px) {
    .section-{{ section.id }}-padding {
      padding-top: {{ section.settings.padding_top }}px;
      padding-bottom: {{ section.settings.padding_bottom }}px;
    }
  }
{%- endstyle -%}

<style>
  /* 手风琴样式 */
  .accordion-section {
    margin-top: 40px;
  }

  .accordion-item {
    border: 1px solid rgba(var(--color-foreground), 0.1);
    border-radius: 8px;
    margin-bottom: 16px;
    overflow: hidden;
    background: rgb(var(--color-background));
  }

  .accordion-header {
    width: 100%;
    padding: 20px 24px;
    background: none;
    border: none;
    text-align: left;
    cursor: pointer;
    display: flex;
    justify-content: space-between;
    align-items: center;
    font-size: 16px;
    font-weight: 600;
    color: rgb(var(--color-foreground));
    transition: background-color 0.3s ease;
  }

  .accordion-header:hover {
    background-color: rgba(var(--color-foreground), 0.05);
  }

  .accordion-header[aria-expanded='true'] {
    background-color: rgba(var(--color-foreground), 0.08);
  }

  .accordion-title {
    flex: 1;
  }

  .accordion-icon {
    transition: transform 0.3s ease;
    display: flex;
    align-items: center;
    justify-content: center;
  }

  .accordion-header[aria-expanded='true'] .accordion-icon {
    transform: rotate(45deg);
  }

  .accordion-content {
    max-height: 0;
    overflow: hidden;
    transition: max-height 0.3s ease;
  }

  .accordion-content[aria-hidden='false'] {
    max-height: 1000px;
  }

  .accordion-content-inner {
    padding: 0 24px 24px 24px;
  }

  .accordion-image {
    margin-bottom: 16px;
  }

  .accordion-image img {
    width: 100%;
    max-width: 400px;
    height: auto;
    border-radius: 6px;
  }

  .accordion-features {
    color: rgb(var(--color-foreground));
    line-height: 1.6;
  }

  .accordion-features ul {
    margin: 0;
    padding-left: 20px;
  }

  .accordion-features li {
    margin-bottom: 8px;
  }

  @media screen and (max-width: 749px) {
    .accordion-header {
      padding: 16px 20px;
      font-size: 15px;
    }

    .accordion-content-inner {
      padding: 0 20px 20px 20px;
    }
  }
</style>

{%- liquid
  if section.settings.image_layout contains 'right'
    assign odd_class = ' image-with-text__grid--reverse'
  else
    assign even_class = ' image-with-text__grid--reverse'
  endif

  if section.settings.row_color_scheme == section.settings.section_color_scheme
    assign no_content_background = true
  endif

  if settings.text_boxes_shadow_opacity == 0 and settings.text_boxes_border_thickness == 0 or settings.text_boxes_border_opacity == 0
    assign no_content_styles = true
  endif

  if settings.text_boxes_border_thickness > 0 and settings.text_boxes_border_opacity > 0 and settings.media_border_thickness > 0 and settings.media_border_opacity > 0
    assign borders_class = ' collapse-borders'
  endif

  if no_content_background and no_content_styles
    assign padding_class = ' collapse-padding'
  endif

  unless no_content_background and no_content_styles
    assign corners_class = ' collapse-corners'
  endunless
-%}

<div class="multirow section-{{ section.id }}-padding gradient color-{{ section.settings.section_color_scheme }}">
  <div class="multirow__inner page-width">
    {%- comment -%} 循环产品元字段数据，只显示图片、标题和描述 {%- endcomment -%}
    {%- if product.metafields.custom.product_all.value -%}
      {%- for item in product.metafields.custom.product_all.value -%}
        <div
          class="image-with-text isolate{{ borders_class }}{{ corners_class }}{{ padding_class }}{% if settings.animations_reveal_on_scroll %} scroll-trigger animate--slide-in{% endif %}"
        >
          <div class="image-with-text__grid grid grid--gapless grid--1-col grid--{% if section.settings.desktop_image_width == 'medium' %}2-col-tablet{% else %}3-col-tablet{% endif %}{% if section.settings.image_layout contains 'alternate' %}{% cycle odd_class, even_class %}{% else %}{{ odd_class }}{% endif %}">
            {%- comment -%} 图片区域 {%- endcomment -%}
            <div class="image-with-text__media-item image-with-text__media-item--{{ section.settings.desktop_image_width }} image-with-text__media-item--{{ section.settings.desktop_content_position }} grid__item">
              <div
                class="image-with-text__media image-with-text__media--{{ section.settings.image_height }} gradient color-{{ section.settings.row_color_scheme }} global-media-settings{% if item.img != blank %} media{% else %} image-with-text__media--placeholder placeholder{% endif %}"
                {% if section.settings.image_height == 'adapt' and item.img != blank %}
                  style="padding-bottom: {{ 1 | divided_by: item.img.aspect_ratio | times: 100 }}%;"
                {% endif %}
              >
                {%- if item.img != blank -%}
                  {%- capture sizes -%}
                    (min-width: {{ settings.page_width }}px) {{ settings.page_width | minus: 100 | divided_by: 2 }}px,
                    (min-width: 750px) calc((100vw - 130px) / 2), calc((100vw - 50px) / 2)
                  {%- endcapture -%}
                  <img
                    src="{{ item.img | img_url: '1500x' }}"
                    alt="{{ item.title | escape }}"
                    sizes="{{ sizes }}"
                    loading="lazy"
                    width="1500"
                    height="{{ 1500 | divided_by: item.img.aspect_ratio | round }}"
                  >
                {%- else -%}
                  {{ 'detailed-apparel-1' | placeholder_svg_tag: 'placeholder-svg' }}
                {%- endif -%}
              </div>
            </div>
            {%- comment -%} 文本内容区域 {%- endcomment -%}
            <div class="image-with-text__text-item grid__item">
              <div class="image-with-text__content image-with-text__content--{{ section.settings.desktop_content_position }} image-with-text__content--desktop-{{ section.settings.desktop_content_alignment }} image-with-text__content--mobile-{{ section.settings.mobile_content_alignment }} image-with-text__content--{{ section.settings.image_height }} content-container{% unless no_content_background and no_content_styles %} gradient color-{{ section.settings.row_color_scheme }}{% else %} background-transparent{% endunless %}">
                {%- comment -%} 标题 {%- endcomment -%}
                {%- if item.title -%}
                  <h2 class="image-with-text__heading {{ section.settings.heading_size }} rte">
                    {{ item.title }}
                  </h2>
                {%- endif -%}
                {%- comment -%} 描述文本 {%- endcomment -%}
                {%- if item.description -%}
                  <div class="image-with-text__text rte {{ section.settings.text_style }}">
                    {{ item.description | metafield_tag }}
                  </div>
                {%- endif -%}
              </div>
            </div>
          </div>
        </div>
      {%- endfor -%}
    {%- else -%}
      {%- comment -%} 当没有元字段数据时显示提示信息 {%- endcomment -%}
      <div class="image-with-text isolate{{ borders_class }}{{ corners_class }}{{ padding_class }}">
        <div class="image-with-text__content content-container gradient color-{{ section.settings.row_color_scheme }}">
          <p class="image-with-text__text rte">暂无产品详情信息</p>
        </div>
      </div>
    {%- endif -%}

    {%- comment -%} 手风琴区域 - 基于产品元字段 accordion_list {%- endcomment -%}
    {%- if product.metafields.custom.accordion_list.value -%}
      <div class="accordion-section section-{{ section.id }}-padding">
        <div class="accordion__inner page-width">
          {%- for item in product.metafields.custom.accordion_list.value -%}
            <div class="accordion-item">
              {%- comment -%} 手风琴标题按钮 {%- endcomment -%}
              <button
                class="accordion-header"
                type="button"
                aria-expanded="false"
                aria-controls="accordion-content-{{ forloop.index }}"
              >
                <span class="accordion-title">{{ item.name }}</span>
                <span class="accordion-icon">
                  <svg width="16" height="16" viewBox="0 0 16 16" fill="none">
                    <path d="M8 4L8 12M4 8L12 8" stroke="currentColor" stroke-width="2" stroke-linecap="round"/>
                  </svg>
                </span>
              </button>

              {%- comment -%} 手风琴内容区域 {%- endcomment -%}
              <div class="accordion-content" id="accordion-content-{{ forloop.index }}" aria-hidden="true">
                <div class="accordion-content-inner">
                  {%- comment -%} 显示图片（如果存在） {%- endcomment -%}
                  {%- if item.img -%}
                    <div class="accordion-image">
                      <img
                        src="{{ item.img | image_url: width: 600 }}"
                        alt="{{ item.name | escape }}"
                        loading="lazy"
                        width="600"
                        height="{{ 600 | divided_by: item.img.aspect_ratio | round }}"
                      >
                    </div>
                  {%- endif -%}

                  {%- comment -%} 显示功能特性内容（如果存在） {%- endcomment -%}
                  {%- if item.features -%}
                    <div class="accordion-features">
                      {{ item.features | metafield_tag }}
                    </div>
                  {%- endif -%}
                </div>
              </div>
            </div>
          {%- endfor -%}
        </div>
      </div>
    {%- endif -%}
  </div>
</div>

<script>
  // 手风琴交互功能
  document.addEventListener('DOMContentLoaded', function () {
    // 获取所有手风琴按钮
    const accordionHeaders = document.querySelectorAll('.accordion-header');

    accordionHeaders.forEach(function (header) {
      header.addEventListener('click', function () {
        // 获取当前按钮的展开状态
        const isExpanded = this.getAttribute('aria-expanded') === 'true';
        const content = document.getElementById(this.getAttribute('aria-controls'));

        // 切换展开状态
        if (isExpanded) {
          // 收起
          this.setAttribute('aria-expanded', 'false');
          content.setAttribute('aria-hidden', 'true');
        } else {
          // 展开
          this.setAttribute('aria-expanded', 'true');
          content.setAttribute('aria-hidden', 'false');
        }
      });
    });
  });
</script>

{% schema %}
{
  "name": "t:sections.multirow.name",
  "class": "section",
  "disabled_on": {
    "groups": ["header", "footer"]
  },
  "settings": [
    {
      "type": "header",
      "content": "t:sections.multirow.settings.header.content"
    },
    {
      "type": "select",
      "id": "image_height",
      "options": [
        {
          "value": "adapt",
          "label": "t:sections.multirow.settings.image_height.options__1.label"
        },
        {
          "value": "small",
          "label": "t:sections.multirow.settings.image_height.options__2.label"
        },
        {
          "value": "medium",
          "label": "t:sections.multirow.settings.image_height.options__3.label"
        },
        {
          "value": "large",
          "label": "t:sections.multirow.settings.image_height.options__4.label"
        }
      ],
      "default": "medium",
      "label": "t:sections.multirow.settings.image_height.label"
    },
    {
      "type": "select",
      "id": "desktop_image_width",
      "options": [
        {
          "value": "small",
          "label": "t:sections.multirow.settings.desktop_image_width.options__1.label"
        },
        {
          "value": "medium",
          "label": "t:sections.multirow.settings.desktop_image_width.options__2.label"
        },
        {
          "value": "large",
          "label": "t:sections.multirow.settings.desktop_image_width.options__3.label"
        }
      ],
      "default": "medium",
      "label": "t:sections.multirow.settings.desktop_image_width.label"
    },
    {
      "type": "select",
      "id": "image_layout",
      "options": [
        {
          "value": "alternate-left",
          "label": "t:sections.multirow.settings.image_layout.options__1.label"
        },
        {
          "value": "alternate-right",
          "label": "t:sections.multirow.settings.image_layout.options__2.label"
        },
        {
          "value": "align-left",
          "label": "t:sections.multirow.settings.image_layout.options__3.label"
        },
        {
          "value": "align-right",
          "label": "t:sections.multirow.settings.image_layout.options__4.label"
        }
      ],
      "default": "alternate-left",
      "label": "t:sections.multirow.settings.image_layout.label"
    },
    {
      "type": "header",
      "content": "t:sections.multirow.settings.header_2.content"
    },
    {
      "type": "select",
      "id": "heading_size",
      "options": [
        {
          "value": "h2",
          "label": "t:sections.all.heading_size.options__1.label"
        },
        {
          "value": "h1",
          "label": "t:sections.all.heading_size.options__2.label"
        },
        {
          "value": "h0",
          "label": "t:sections.all.heading_size.options__3.label"
        },
        {
          "value": "hxl",
          "label": "t:sections.all.heading_size.options__4.label"
        },
        {
          "value": "hxxl",
          "label": "t:sections.all.heading_size.options__5.label"
        }
      ],
      "default": "h1",
      "label": "t:sections.all.heading_size.label"
    },
    {
      "type": "select",
      "id": "text_style",
      "options": [
        {
          "value": "body",
          "label": "t:sections.multirow.settings.text_style.options__1.label"
        },
        {
          "value": "subtitle",
          "label": "t:sections.multirow.settings.text_style.options__2.label"
        }
      ],
      "default": "body",
      "label": "t:sections.multirow.settings.text_style.label"
    },
    {
      "type": "select",
      "id": "desktop_content_position",
      "options": [
        {
          "value": "top",
          "label": "t:sections.multirow.settings.desktop_content_position.options__1.label"
        },
        {
          "value": "middle",
          "label": "t:sections.multirow.settings.desktop_content_position.options__2.label"
        },
        {
          "value": "bottom",
          "label": "t:sections.multirow.settings.desktop_content_position.options__3.label"
        }
      ],
      "default": "middle",
      "label": "t:sections.multirow.settings.desktop_content_position.label"
    },
    {
      "type": "select",
      "id": "desktop_content_alignment",
      "options": [
        {
          "value": "left",
          "label": "t:sections.multirow.settings.desktop_content_alignment.options__1.label"
        },
        {
          "value": "center",
          "label": "t:sections.multirow.settings.desktop_content_alignment.options__2.label"
        },
        {
          "value": "right",
          "label": "t:sections.multirow.settings.desktop_content_alignment.options__3.label"
        }
      ],
      "default": "left",
      "label": "t:sections.multirow.settings.desktop_content_alignment.label"
    },
    {
      "type": "select",
      "id": "mobile_content_alignment",
      "options": [
        {
          "value": "left",
          "label": "t:sections.multirow.settings.mobile_content_alignment.options__1.label"
        },
        {
          "value": "center",
          "label": "t:sections.multirow.settings.mobile_content_alignment.options__2.label"
        },
        {
          "value": "right",
          "label": "t:sections.multirow.settings.mobile_content_alignment.options__3.label"
        }
      ],
      "default": "left",
      "label": "t:sections.multirow.settings.mobile_content_alignment.label"
    },
    {
      "type": "header",
      "content": "t:sections.multirow.settings.header_3.content"
    },
    {
      "type": "color_scheme",
      "id": "section_color_scheme",
      "label": "t:sections.all.colors.label",
      "default": "scheme-1"
    },
    {
      "type": "color_scheme",
      "id": "row_color_scheme",
      "label": "t:sections.multirow.settings.container_color_scheme.label",
      "default": "scheme-1"
    },
    {
      "type": "header",
      "content": "t:sections.all.padding.section_padding_heading"
    },
    {
      "type": "range",
      "id": "padding_top",
      "min": 0,
      "max": 100,
      "step": 4,
      "unit": "px",
      "label": "t:sections.all.padding.padding_top",
      "default": 36
    },
    {
      "type": "range",
      "id": "padding_bottom",
      "min": 0,
      "max": 100,
      "step": 4,
      "unit": "px",
      "label": "t:sections.all.padding.padding_bottom",
      "default": 36
    },
    {
      "type": "header",
      "content": "产品元字段设置"
    },
    {
      "type": "paragraph",
      "content": "此section会自动读取产品的product_all元字段数据，展示产品的图片、标题和描述信息。无需手动配置blocks。"
    }
  ],
  "presets": [
    {
      "name": "产品元字段展示 (Multirow)"
    }
  ]
}
{% endschema %}
